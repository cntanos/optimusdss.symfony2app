# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
       # Symfony\Component\Security\Core\User\User: plaintext
        Optimus\OptimusBundle\Entity\Users:
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
       # in_memory:
       #     memory:
       #         users:
       #             user:  { password: userpass, roles: [ 'ROLE_USER' ] }
       #             admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        main:
            entity: { class: Optimus\OptimusBundle\Entity\Users, property: lastname }

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # the login page has to be accessible for everybody
        secured_area:
            pattern:  ^/
            #security: false
            anonymous:  ~ 
            form_login:
                check_path: /login_check
                login_path: /login  
                username_parameter: _lastname
            logout:
                path:   /logout
                target: /login                
            http_basic: ~

        login_firewall:
            pattern:    ^/login$
            anonymous:  ~

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/semantic-framework, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }
        - { path: ^/adminBuilding, roles: ROLE_ADMIN }
        - { path: ^/adminPartitions, roles: ROLE_ADMIN }
        - { path: ^/adminSensors, roles: ROLE_ADMIN }
        - { path: ^/adminActionPlans, roles: ROLE_ADMIN }